openapi: 3.0.0
info:
  title: Scholar Sheet API
  version: 1.0.0
  description: API for Scholar Sheet application

servers:
  - url: http://localhost:8000
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /admin/signup:
    post:
      summary: Create a new admin account
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                institute_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                address:
                  type: string
              required:
                - institute_name
                - email
                - password
                - address
      responses:
        "201":
          description: Account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Account created successfully"
        "409":
          description: User already exists
        "400":
          description: Bad request

  /admin/email/verify:
    get:
      summary: Verify admin email
      tags:
        - Admin
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
          description: Email verification token
      responses:
        "200":
          description: Email verified successfully
        "400":
          description: Invalid or missing token
        "404":
          description: Invalid or expired token
  /admin/login:
    post:
      summary: Admin login
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  default: "ukashyap_be21@thapar.edu"
                password:
                  type: string
                  default: "12345678"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                      institute_name:
                        type: string
                      address:
                        type: string

  /admin/researcher:
    post:
      summary: Add a new researcher (If current is true then end date and institute are not required)
      tags:
        - Admin
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scholar_id:
                  type: string
                  minLength: 3
                  maxLength: 255
                email:
                  type: string
                  format: email
                department:
                  type: string
                  minLength: 3
                positions:
                  type: array
                  items:
                    type: object
                    properties:
                      start:
                        type: string
                        example: "10-10-2010"
                      end:
                        type: string
                        example: "10-10-2015"
                      position:
                        type: string
                        minLength: 3
                      institute:
                        type: string
                        minLength: 3
                      current:
                        type: boolean
                    required:
                      - start
                      - position
                      - institute
                      - current
                gender:
                  type: string
                  enum: [male, female, other]
              required:
                - scholar_id
                - email
                - department
                - gender
      responses:
        "201":
          description: Researcher added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Researcher added successfully"

  /admin/researcher/delete: 
    delete: 
      summary: Delete a researcher
      tags: 
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: scholar_id
          schema:
            type: string
          description: Scholar ID of the researcher to delete
          required: true
        - in: query
          name: end_date
          schema:
            type: string
          description: End date associated with the researcher
          required: true
      responses:
        201:
          description: Researcher updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Researcher updated successfully"
                  updatedPositions:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: Position title
                          example: "Associate Professor"
                        start:
                          type: string
                          format: date
                          example: "2020-01-01"
                        end:
                          type: string
                          format: date
                          example: "2023-01-01"
                        current:
                          type: boolean
                          description: Indicates if this is the current position
                          example: false
                        institute:
                          type: string
                          description: Institute name
                          example: "Institute of Advanced Studies"
        400:
          description: Bad request due to invalid query parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid query parameters"
        403:
          description: Forbidden - Admin does not have permission to modify this researcher
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "You do not have permission to modify this researcher"
        404:
          description: Researcher not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Researcher not found"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
        
  /admin/researchers:
    get:
      summary: Get all researchers
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
          required: false
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of researchers per page
          required: false
        - in: query
          name: department
          schema:
            type: string
          description: Filter researchers by department
          required: false
        - in: query
          name: gender
          schema:
            type: string
          description: Filter researchers by gender
          required: false
        - in: query
          name: sort
          schema:
            type: string
            enum: 
              - name
              - -name
              - hIndex
              - -hIndex
              - iIndex
              - -iIndex
              - totalPapers
              - -totalPapers
          description: >
            Sort researchers. 
            Prefix with '-' for descending order.
            Supported fields: name, hIndex, iIndex, totalPapers
          required: false
      responses:
        '200':
          description: Successful retrieval of researchers
          content:
            application/json:
              schema:
                type: object
                properties:
                  researchers:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        scholar_id:
                          type: string
                        email:
                          type: string
                        department:
                          type: string
                        gender:
                          type: string
                        citations:
                          type: integer
                        h_index:
                          type: integer
                        i_index:
                          type: integer
                        totalPapers:
                          type: integer
                        positions:
                          type: array
                          items:
                            type: string
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: Unauthorized, invalid or missing token
        '500':
          description: Server error

  /admin/researcher/update/{id}:
    put:
      summary: Update researcher details
      description: |
        Allows partial updates to researcher information. 
        Only provided fields will be updated.
        Requires admin authentication and ownership.
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Scholar ID of the researcher to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 2
                  maxLength: 100
                  description: Full name of the researcher
                email:
                  type: string
                  format: email
                  description: Valid email address
                department:
                  type: string
                  description: Researcher's department
                gender:
                  type: string
                  enum: ['Male', 'Female', 'Other']
                  description: Researcher's gender
                positions:
                  type: array
                  items:
                    type: string
                  description: List of researcher's positions
      responses:
        '200':
          description: Researcher successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Researcher updated successfully"

  /admin/department:
    post:
      summary: Add departments
      tags:
        - Admin
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                departments:
                  type: array
                  items:
                    type: string
              required:
                - departments
      responses:
        "200":
          description: Departments added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Departments added successfully"
                  departments:
                    type: array
                    items:
                      type: string

  /admin/stats/departments:
    get:
      summary: Get all departments
      tags:
        - Admin Dashboard Stats
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: string
      security:
        - bearerAuth: []

  /admin/stats/card-data:
    get:
      summary: Get card stats data
      tags:
        - Admin Dashboard Stats
      parameters:
        - in: query
          name: department
          schema:
            type: string
          description: Filter by department
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  citations:
                    type: object
                    properties:
                      currentYear:
                        type: integer
                      lastYear:
                        type: integer
                      growth:
                        type: string
                  publications:
                    type: object
                    properties:
                      currentYear:
                        type: integer
                      lastYear:
                        type: integer
                      growth:
                        type: string
                  totalPapers:
                    type: integer
                  totalResearchers:
                    type: integer
      security:
        - bearerAuth: []

  /admin/stats/analytics-graph:
    get:
      summary: Get analytics graph data
      tags:
        - Admin Dashboard Stats
      parameters:
        - in: query
          name: department
          schema:
            type: string
          description: Filter by department
        - in: query
          name: criteria
          schema:
            type: string
            enum: [totalPapers, totalCitations]
          required: true
          description: Criteria for graph data
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
      security:
        - bearerAuth: []

  /admin/stats/top-researchers:
    get:
      summary: Get top researchers data
      tags:
        - Admin Dashboard Stats
      parameters:
        - in: query
          name: department
          schema:
            type: string
          description: Filter by department
        - in: query
          name: criteria
          schema:
            type: string
            enum: [totalCitations, totalPapers, hIndex, i10index]
          required: true
          description: Criteria for ranking researchers
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 5
          description: Number of top researchers to retrieve per page
        - in: query
          name: year
          schema:
            type: string
            default: 2024
          description: Year to filter data
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  researchers:
                    type: array
                    items:
                      type: object
                      properties:
                        researcher_id:
                          type: string
                        name:
                          type: string
                        department:
                          type: string
                        totalPapers:
                          type: integer
                        totalCitations:
                          type: integer
                        hIndex:
                          type: integer
                        i10index:
                          type: integer
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
      security:
        - bearerAuth: []

  /admin/stats/top-publications:
    post:
      summary: Get top publications data
      tags:
        - Admin Dashboard Stats
      parameters:
        - in: query
          name: department
          schema:
            type: string
          description: Filter by department
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of top publications to retrieve per page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: array
                  items:
                    type: string
                journal:
                  type: array
                  items:
                    type: string
                author:
                  type: array
                  items:
                    type: string
                topic:
                  type: array
                  items:
                    type: string
                  default: ["cs"]
                citationsRange:
                  type: array
                  items:
                    type: number
                  minItems: 2
                  maxItems: 2
                  default: [0, 10]
                sort:
                  type: string
                  enum:
                    [
                      "title:asc",
                      "title:desc",
                      "year:asc",
                      "year:desc",
                      "author:asc",
                      "author:desc",
                      "citations:asc",
                      "citations:desc",
                    ]
                  default: citations:desc
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  publications:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        year:
                          type: string
                        citations:
                          type: integer
                        author:
                          type: string
                        coAuthors:
                          type: array
                          items:
                            type: string
                        topics:
                          type: array
                          items:
                            type: string
                        publicationLink:
                          type: string
                        pdfLink:
                          type: string
                        description:
                          type: string
                        journal:
                          type: string
                        department:
                          type: string
                        googleScholarId:
                          type: string
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
      security:
        - bearerAuth: []

  /admin/stats/research-topics:
    get:
      summary: Get research topics data
      tags:
        - Admin Dashboard Stats
      parameters:
        - in: query
          name: department
          schema:
            type: string
          description: Filter by department
        - in: query
          name: year
          schema:
            type: string
            default: 2024
          description: Year to filter data
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    count:
                      type: integer
      security:
        - bearerAuth: []

  /admin/stats/journal-diversity:
    get:
      summary: Get journal diversity data
      tags:
        - Admin Dashboard Stats
      parameters:
        - in: query
          name: department
          schema:
            type: string
          description: Filter by department
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    count:
                      type: integer
      security:
        - bearerAuth: []

  /admin/stats/filter-data:
    get:
      summary: Get pre-filter data
      tags:
        - Admin Dashboard Stats
      parameters:
        - in: query
          name: department
          schema:
            type: string
          description: Filter by department
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  years:
                    type: array
                    items:
                      type: string
                  journals:
                    type: array
                    items:
                      type: string
                  authors:
                    type: array
                    items:
                      type: string
                  topics:
                    type: array
                    items:
                      type: string
                  minCitations:
                    type: integer
                  maxCitations:
                    type: integer
      security:
        - bearerAuth: []

  /admin/stats/gender-diversity:
    get:
      summary: Get gender distribution data
      tags:
        - Admin Dashboard Stats
      parameters:
        - in: query
          name: department
          schema:
            type: string
          description: Filter by department (optional)
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  distribution:
                    type: object
                    properties:
                      male:
                        type: integer
                      female:
                        type: integer
                      others:
                        type: integer
                  percentages:
                    type: object
                    properties:
                      male:
                        type: string
                      female:
                        type: string
                      others:
                        type: string
                  totalResearchers:
                    type: integer
      security:
        - bearerAuth: []

  /admin/stats/report:
    get:
      summary: Generate pdf report for data
      tags:
        - Admin Dashboard Stats
      parameters:
        - in: query
          name: department
          schema:
            type: string
          description: Department to generate report for (Optional)
        - in: query
          name: year
          schema:
            type: string
          description: Year to generate report for (Optional)
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileUrl:
                    type: string
                  message:
                    type: string
                    default: "Report generated and uploaded successfully"
      security:
        - bearerAuth: []

  /admin/stats/year-range:
    get:
      summary: Get statistics data for a specific year range
      tags:
        - Admin Dashboard Stats
      parameters:
        - in: query
          name: department
          schema:
            type: string
          description: Department to filter statistics 
        - in: query
          name: startYear
          schema:
            type: string
          description: Start year of the range 
          required: true
        - in: query
          name: endYear
          schema:
            type: string
          description: End year of the range 
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalPapers:
                    type: integer
                    description: Total number of papers in the specified range
                  totalCitations:
                    type: integer
                    description: Total number of citations for papers in the specified range
                  hIndex:
                    type: integer
                    description: H-index calculated for the specified range
                  i10index:
                    type: integer
                    description: i10-index calculated for the specified range
        "400":
          description: Invalid request (e.g., missing or invalid parameters)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
      security:
        - bearerAuth: []


  /search/researcher:
    get:
      tags:
        - Search
      description: Retrieve a list of researchers based on a search query.
      parameters:
        - name: query
          in: query
          required: true
          description: The search term to look for in researcher names, departments, or other indexed fields.
          schema:
            type: string
      responses:
        "200":
          description: A list of researchers matching the search query.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Prashant Singh Rana"
                    scholar_id:
                      type: string
                      example: "MNj1Dw4AAAAJ"
                    department:
                      type: string
                      example: "csed"
      security:
        - bearerAuth: []

  /researcher/stats/profile:
    get:
      summary: Get researcher profile data
      tags:
        - Researcher Stats
      parameters:
        - in: query
          name: scholar_id
          required: true
          schema:
            type: string
          description: Scholar ID of the researcher
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  scholar_id:
                    type: string
                  email:
                    type: string
                  department:
                    type: string
                  citations:
                    type: integer
                  h_index:
                    type: integer
                  i_index:
                    type: integer
                  totalPapers:
                    type: integer
                  positions:
                    type: array
                    items:
                      type: string
                  admin_id:
                    type: object
                    properties:
                      institute_name:
                        type: string
      security:
        - bearerAuth: []

  /researcher/stats/card-data:
    get:
      summary: Get researcher card stats data
      tags:
        - Researcher Stats
      parameters:
        - in: query
          name: scholar_id
          required: true
          schema:
            type: string
          description: Scholar ID of the researcher
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  citations:
                    type: object
                    properties:
                      currentYear:
                        type: integer
                      lastYear:
                        type: integer
                      increasePercentage:
                        type: string
                  totalPapers:
                    type: object
                    properties:
                      currentYear:
                        type: integer
                      lastYear:
                        type: integer
                      total:
                        type: integer
                      increasePercentage:
                        type: string
                  hIndex:
                    type: integer
                  i10Index:
                    type: integer
      security:
        - bearerAuth: []

  /researcher/stats/analytics-graph:
    get:
      summary: Get researcher analytics graph data
      tags:
        - Researcher Stats
      parameters:
        - in: query
          name: scholar_id
          required: true
          schema:
            type: string
          description: Scholar ID of the researcher
        - in: query
          name: criteria
          required: true
          schema:
            type: string
            enum: [totalPapers, totalCitations, hIndex, i10Index]
          description: Criteria for graph data
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    year:
                      type: integer
                    value:
                      type: integer
      security:
        - bearerAuth: []

  /researcher/stats/top-researchers-department:
    get:
      summary: Get top researchers in the same department
      tags:
        - Researcher Stats
      parameters:
        - in: query
          name: scholar_id
          required: true
          schema:
            type: string
          description: Scholar ID of the researcher
        - in: query
          name: criteria
          required: true
          schema:
            type: string
            enum: [totalPapers, citations, h_index, i_index]
          description: Criteria for ranking researchers
        - in: query
          name: limit
          schema:
            type: integer
            default: 5
          description: Number of top researchers to retrieve
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  topResearchers:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        scholar_id:
                          type: string
                        department:
                          type: string
                        totalPapers:
                          type: integer
                        citations:
                          type: integer
                        h_index:
                          type: integer
                        i_index:
                          type: integer
                        rank:
                          type: integer
                  researcher:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      scholar_id:
                        type: string
                      department:
                        type: string
                      totalPapers:
                        type: integer
                      citations:
                        type: integer
                      h_index:
                        type: integer
                      i_index:
                        type: integer
                      rank:
                        type: integer
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
      security:
        - bearerAuth: []

  /researcher/stats/research-topics:
    get:
      summary: Get researcher's research topics data
      tags:
        - Researcher Stats
      parameters:
        - in: query
          name: scholar_id
          required: true
          schema:
            type: string
          description: Scholar ID of the researcher
        - in: query
          name: year
          schema:
            type: string
            default: 2024
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    count:
                      type: integer
      security:
        - bearerAuth: []

  /researcher/stats/journal-diversity:
    get:
      summary: Get researcher's journal diversity data
      tags:
        - Researcher Stats
      parameters:
        - in: query
          name: scholar_id
          required: true
          schema:
            type: string
          description: Scholar ID of the researcher
        - in: query
          name: year
          schema:
            type: string
            default: 2024
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    count:
                      type: integer
      security:
        - bearerAuth: []

  /researcher/stats/filter-data:
    get:
      summary: Get researcher's pre-filter data
      tags:
        - Researcher Stats
      parameters:
        - in: query
          name: scholar_id
          required: true
          schema:
            type: string
          description: Scholar ID of the researcher
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    years:
                      type: array
                      items:
                        type: string
                    journals:
                      type: array
                      items:
                        type: string
                    topics:
                      type: array
                      items:
                        type: string
                    minCitations:
                      type: integer
                    maxCitations:
                      type: integer
      security:
        - bearerAuth: []

  /researcher/stats/top-publications:
    post:
      summary: Get researcher's top publications data
      tags:
        - Researcher Stats
      parameters:
        - in: query
          name: scholar_id
          required: true
          schema:
            type: string
          description: Scholar ID of the researcher
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of top publications to retrieve per page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: array
                  items:
                    type: string
                journal:
                  type: array
                  items:
                    type: string
                topic:
                  type: array
                  items:
                    type: string
                citationsRange:
                  type: array
                  items:
                    type: number
                  minItems: 2
                  maxItems: 2
                sort:
                  type: string
                  enum:
                    [
                      "title:asc",
                      "title:desc",
                      "year:asc",
                      "year:desc",
                      "citations:asc",
                      "citations:desc",
                    ]
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  publications:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        year:
                          type: string
                        citations:
                          type: integer
                        author:
                          type: string
                        coAuthors:
                          type: array
                          items:
                            type: string
                        topics:
                          type: array
                          items:
                            type: string
                        publicationLink:
                          type: string
                        pdfLink:
                          type: string
                        description:
                          type: string
                        journal:
                          type: string
                        department:
                          type: string
                        googleScholarId:
                          type: string
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
      security:
        - bearerAuth: []

  /rank:
    get:
      summary: Get institute rankings based on criteria
      tags:
        - Rank
      parameters:
        - in: query
          name: criteria
          required: true
          schema:
            type: string
            enum: [totalPapers, citations]
          description: Criteria for ranking institutes (either totalPapers or citations)
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  instituteRank:
                    type: integer
                    description: Current rank of the requesting institute
                    example: 5
                  rankings:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Institute ID
                          example: "507f1f77bcf86cd799439011"
                        rank:
                          type: integer
                          description: Position in rankings
                          example: 1
                        name:
                          type: string
                          description: Name of the institute
                          example: "Stanford University"
                        totalPapers:
                          type: integer
                          description: Total number of research papers
                          example: 150
                        citations:
                          type: integer
                          description: Total number of citations
                          example: 2500
      security:
        - bearerAuth: []